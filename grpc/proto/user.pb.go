// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/user.proto

package userdb_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Reply struct {
	Params               map[string][]byte `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Original             []byte            `protobuf:"bytes,2,opt,name=original,proto3" json:"original,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{0}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetParams() map[string][]byte {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Reply) GetOriginal() []byte {
	if m != nil {
		return m.Original
	}
	return nil
}

type Job struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{1}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Reply)(nil), "userdb.pb.Reply")
	proto.RegisterMapType((map[string][]byte)(nil), "userdb.pb.Reply.ParamsEntry")
	proto.RegisterType((*Job)(nil), "userdb.pb.Job")
}

func init() {
	proto.RegisterFile("proto/user.proto", fileDescriptor_d570e3e37e5899c5)
}

var fileDescriptor_d570e3e37e5899c5 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xdd, 0xc4, 0x16, 0x33, 0xd5, 0x12, 0x06, 0xc1, 0x18, 0x3c, 0x84, 0x9c, 0xd2, 0xcb,
	0x0a, 0xd5, 0x83, 0xf6, 0x28, 0x88, 0xd0, 0x93, 0xac, 0x07, 0xcf, 0xbb, 0xcd, 0x50, 0x96, 0x26,
	0xd9, 0x30, 0x4d, 0x0b, 0xf9, 0x1f, 0xfe, 0x60, 0xe9, 0x36, 0x96, 0xe2, 0xed, 0x7b, 0xbc, 0xef,
	0xc1, 0xee, 0x40, 0xdc, 0xb2, 0xeb, 0xdc, 0xe3, 0x6e, 0x4b, 0x2c, 0x3d, 0x62, 0x74, 0xe0, 0xd2,
	0xc8, 0xd6, 0xe4, 0x3f, 0x02, 0x46, 0x8a, 0xda, 0xaa, 0xc7, 0x67, 0x18, 0xb7, 0x9a, 0x75, 0xbd,
	0x4d, 0x44, 0x16, 0x16, 0x93, 0xf9, 0x83, 0x3c, 0x59, 0xd2, 0x1b, 0xf2, 0xd3, 0xd7, 0xef, 0x4d,
	0xc7, 0xbd, 0x1a, 0x5c, 0x4c, 0xe1, 0xca, 0xb1, 0x5d, 0xdb, 0x46, 0x57, 0x49, 0x90, 0x89, 0xe2,
	0x5a, 0x9d, 0x72, 0xfa, 0x0a, 0x93, 0xb3, 0x09, 0xc6, 0x10, 0x6e, 0xa8, 0x4f, 0x44, 0x26, 0x8a,
	0x48, 0x1d, 0x10, 0x6f, 0x61, 0xb4, 0xd7, 0xd5, 0x8e, 0x86, 0xe5, 0x31, 0x2c, 0x82, 0x17, 0x91,
	0xcf, 0x20, 0x5c, 0x3a, 0x83, 0x53, 0x08, 0x6c, 0x39, 0x2c, 0x02, 0x5b, 0x22, 0xc2, 0x65, 0xa3,
	0xeb, 0xa3, 0x1f, 0x29, 0xcf, 0xf3, 0x05, 0xdc, 0x7c, 0x3b, 0xde, 0x10, 0x7f, 0x11, 0xef, 0xed,
	0x8a, 0x70, 0x06, 0xe1, 0x07, 0x75, 0x38, 0x3d, 0x7b, 0xff, 0xd2, 0x99, 0x34, 0xfe, 0xff, 0x9f,
	0xfc, 0xe2, 0xed, 0x1e, 0xee, 0x0c, 0xcb, 0x95, 0xab, 0xff, 0xba, 0x35, 0x35, 0xc4, 0xba, 0xa3,
	0xd2, 0x8c, 0xfd, 0xa9, 0x9e, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x55, 0x64, 0x49, 0x3e,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WorkerServiceClient is the client API for WorkerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkerServiceClient interface {
	Get(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Reply, error)
}

type workerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWorkerServiceClient(cc grpc.ClientConnInterface) WorkerServiceClient {
	return &workerServiceClient{cc}
}

func (c *workerServiceClient) Get(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/userdb.pb.WorkerService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkerServiceServer is the server API for WorkerService service.
type WorkerServiceServer interface {
	Get(context.Context, *Job) (*Reply, error)
}

// UnimplementedWorkerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkerServiceServer struct {
}

func (*UnimplementedWorkerServiceServer) Get(ctx context.Context, req *Job) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterWorkerServiceServer(s *grpc.Server, srv WorkerServiceServer) {
	s.RegisterService(&_WorkerService_serviceDesc, srv)
}

func _WorkerService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Job)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userdb.pb.WorkerService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServiceServer).Get(ctx, req.(*Job))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userdb.pb.WorkerService",
	HandlerType: (*WorkerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _WorkerService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/user.proto",
}
